<Window  x:Class="ImageViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ImageViewer"
        xmlns:userControls="clr-namespace:ImageViewer.MVVM.View.userControls"
        
        xmlns:emguConverter="clr-namespace:ImageViewer.MVVM"
        
        mc:Ignorable="d"
         
         TextElement.FontWeight="Regular"
         TextElement.FontSize="13"
         TextOptions.TextFormattingMode="Ideal"
         TextOptions.TextRenderingMode="Auto"
         Background="#FFFAF3"
         
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <!-- Boolean to Visibility Converter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#FF892A"/>
        <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#FFF1E4"/>

        <SolidColorBrush x:Key="SecondaryNigthBackgroundColor" Color="#3E3935"/>

        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#EA7212"/>
        <SolidColorBrush x:Key="PrimaryGrayColor" Color="#64677A"/>

        <SolidColorBrush x:Key="SecondaryBlueColor" Color="#F25F0F"/>
        <SolidColorBrush x:Key="SecondaryGrayColor" Color="#CECECE"/>

        <SolidColorBrush x:Key="TertiaryBlueColor" Color="#FFCE9B"/>

        <Style x:Key="Background" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Mode}" Value="ligth">
                    <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Mode}" Value="nigth">
                    <Setter Property="Background" Value="{DynamicResource SecondaryNigthBackgroundColor}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToggleTest" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource SecondaryGrayColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="MaxHeight" Value="20"/>
            <Setter Property="MaxWidth" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="7" Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center"/>
                            <Ellipse x:Name="Ellipse"
                                     Height="20"
                                     Width="20"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource SecondaryBackgroundColor}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="3"
                                     ></Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#FFCE9B" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="15 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#CECECE" Duration="0:0:0.2"/>
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource SecondaryBlueColor}"/>
                                <Setter TargetName="Ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Style="{StaticResource Background}">

        <Grid.RowDefinitions>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="80*"/>
            <RowDefinition Height="17*"/>
        </Grid.RowDefinitions>
        
        <userControls:menuBar Grid.Row="0" VerticalAlignment="Top"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" Source="{Binding DisplayImage.Path, UpdateSourceTrigger=PropertyChanged}"
               Margin=" 10 10 10 10" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <Image Grid.Column="1" Margin=" 10 10 10 10" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Grayscale}" Value="True">
                                <Setter Property="Source" Value="{Binding GrayImage, Converter={emguConverter:Converter}}"/>
                                
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Grayscale}" Value="False">
                                <Setter Property="Source" Value="{Binding BgrImage, Converter={emguConverter:Converter}}"/>
                                
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>


            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <Expander  HorizontalAlignment="Stretch" >
                        <Expander.Header >
                            <DockPanel >
                                <TextBlock Text="Blur" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" />
                                <ToggleButton Margin="0,8,0,0" IsChecked="{Binding BlurActive, Mode=TwoWay}"  Style="{StaticResource ToggleTest}"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <StackPanel
                            Margin="24,8,24,16"
                            Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}">



                            <Label Content="Blur value:"/>
                            <Slider Minimum="1" Maximum="89" Value="{Binding BlurValue, Mode=TwoWay}" IsEnabled="{Binding BlurActive}" 
                                    IsSnapToTickEnabled="True" TickFrequency="2" TickPlacement="Both">

                            </Slider>

                        </StackPanel>
                    </Expander>
                    <Border />

                    <Expander  HorizontalAlignment="Stretch">
                        <Expander.Header >
                            <DockPanel >
                                <TextBlock Text="Treshold" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" />
                                <ToggleButton Margin="0,8,0,0" IsChecked="{Binding TreshActive, Mode=TwoWay}" Style="{StaticResource ToggleTest}"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <StackPanel
                            Margin="24,8,24,16"
                            Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}">

                            <Label Content="Treshold value:"/>
                            <Slider Minimum="0" Maximum="255"  Value="{Binding TreshValue, Mode=TwoWay}" IsEnabled="{Binding TreshActive}"/>

                            <Label Content="Max treshold value:"/>
                            <Slider Minimum="0" Maximum="255"  Value="{Binding MaxTreshValue, Mode=TwoWay}" IsEnabled="{Binding TreshActive}"/>

                            <ComboBox ItemsSource="{Binding ThresholdTypes}" SelectedItem="{Binding SelectedThreshold}" DisplayMemberPath="Key"/>


                        </StackPanel>
                    </Expander>
                    <Border />

                    <Expander  HorizontalAlignment="Stretch" >
                        <Expander.Header >
                            <DockPanel >
                                <TextBlock Text="Eroding" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" />
                                <ToggleButton Margin="0,8,0,0" IsChecked="{Binding ErodeDilateActive, Mode=TwoWay}" Style="{StaticResource ToggleTest}"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <StackPanel
                            Margin="24,8,24,16"
                            Orientation="Vertical"
                            >

                            <Label Content="Erode Iterations:"/>
                            <Slider Maximum="10" Minimum="0" 
                                TickFrequency="1" TickPlacement="Both" Value="{Binding ErodeIterations, Mode=TwoWay}" IsEnabled="{Binding ErodeDilateActive}"/>

                            <TextBlock Text="Dilate Iterations:"/>
                            <Slider Maximum="10" Minimum="0" 
                                TickFrequency="1" TickPlacement="Both" Value="{Binding DilateIterations, Mode=TwoWay}" IsEnabled="{Binding ErodeDilateActive}"/>

                        </StackPanel>
                    </Expander>
                    <Border />
                    <Expander  HorizontalAlignment="Stretch" Visibility="{Binding Grayscale, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Expander.Header >
                            <DockPanel >
                                <TextBlock Text="Edge" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" />
                                <ToggleButton Margin="0,8,0,0" IsChecked="{Binding EdgeActive, Mode=TwoWay}" Style="{StaticResource ToggleTest}"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Expander.Header>
                        <StackPanel
                            Margin="24,8,24,16"
                            Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}">


                            <Label Content="Edge treshold 1:"/>
                            <Slider Minimum="0" Maximum="255"  Value="{Binding EdgeTresh1, Mode=TwoWay}" IsEnabled="{Binding EdgeActive}"/>

                            <Label Content="Edge treshold 2:"/>
                            <Slider Minimum="0" Maximum="255"  Value="{Binding EdgeTresh2, Mode=TwoWay}" IsEnabled="{Binding EdgeActive}"/>

                        </StackPanel>
                    </Expander>
                    <Border />
                </StackPanel>
                <StackPanel Grid.Row="1" HorizontalAlignment="Center"  VerticalAlignment="Center"
                            Margin="24,0,24,0"
                            Orientation="Horizontal"
                            >

                    <Label FontSize="15" Content="Grayscale:"/>
                    <ToggleButton  IsChecked="{Binding Grayscale, Mode=TwoWay}" Style="{StaticResource ToggleTest}"/>

                </StackPanel>
                <Button Grid.Row="2" VerticalAlignment="Bottom" Content="Save image" Margin="15 5 15 5" Command="{Binding SaveCommand}"/>
            </Grid>
        </Grid>
        <userControls:customListView Grid.Row="2" HorizontalAlignment="Center"  />
    </Grid>
</Window>
